!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs"),require("rxjs/operators"),require("@angular/cdk/drag-drop"),require("@angular/common"),require("@angular/core"),require("ngx-pagination")):"function"==typeof define&&define.amd?define("ngx-easy-table",["exports","rxjs","rxjs/operators","@angular/cdk/drag-drop","@angular/common","@angular/core","ngx-pagination"],e):e(n["ngx-easy-table"]={},n.rxjs,n.rxjs.operators,n.ng.cdk["drag-drop"],n.ng.common,n.ng.core,n.ngxPagination)}(this,function(n,t,o,e,a,i,r){"use strict";function l(n,e){var t="function"==typeof Symbol&&n[Symbol.iterator];if(!t)return n;var o,a,i=t.call(n),r=[];try{for(;(void 0===e||0<e--)&&!(o=i.next()).done;)r.push(o.value)}catch(l){a={error:l}}finally{try{o&&!o.done&&(t=i["return"])&&t.call(i)}finally{if(a)throw a.error}}return r}function c(){for(var n=[],e=0;e<arguments.length;e++)n=n.concat(l(arguments[e]));return n}var s={TINY:"tiny",BIG:"big",NORMAL:"normal"},g={LIGHT:"light",DARK:"dark"},d={onPagination:"onPagination",onOrder:"onOrder",onGlobalSearch:"onGlobalSearch",onSearch:"onSearch",onClick:"onClick",onDoubleClick:"onDoubleClick",onCheckboxSelect:"onCheckboxSelect",onSelectAll:"onSelectAll",onColumnResizeMouseDown:"onColumnResizeMouseDown",onColumnResizeMouseUp:"onColumnResizeMouseUp",onRowDrop:"onRowDrop",onRowCollapsedShow:"onRowCollapsedShow",onRowCollapsedHide:"onRowCollapsedHide",onRowContextMenu:"onRowContextMenu"},p=function(){function n(){}return n.config={searchEnabled:!1,headerEnabled:!0,orderEnabled:!0,orderEventOnly:!1,globalSearchEnabled:!1,paginationEnabled:!0,exportEnabled:!1,clickEvent:!0,selectRow:!1,selectCol:!1,selectCell:!1,rows:10,additionalActions:!1,serverPagination:!1,isLoading:!1,detailsTemplate:!1,groupRows:!1,paginationRangeEnabled:!0,collapseAllRows:!1,checkboxes:!1,resizeColumn:!1,fixedColumnWidth:!1,horizontalScroll:!1,draggable:!1,logger:!1,showDetailsArrow:!1,showContextMenu:!1,persistState:!1,paginationMaxSize:5,tableLayout:{style:s.NORMAL,theme:g.LIGHT,borderless:!1,hover:!0,striped:!1}},n.decorators=[{type:i.Injectable}],n}(),u=function(){function n(){}return n.randomId=function(){return Math.floor(1e6*Math.random())},n.decorators=[{type:i.Injectable}],n}(),f={rowContextMenuClicked:0,toolPanelClicked:1};f[f.rowContextMenuClicked]="rowContextMenuClicked",f[f.toolPanelClicked]="toolPanelClicked";var h=function(){function n(n){this.cdr=n,this.grouped=[],this.menuActive=!1,this.isSelected=!1,this.page=1,this.count=null,this.rowContextMenuPosition={top:null,left:null,value:null},this.sortBy={key:"",order:"asc"},this.sortByIcon={key:"",order:"asc"},this.selectedDetailsTemplateRowId=new Set,this.loadingHeight="30px",this.onSelectAllBinded=this.onSelectAll.bind(this),this.event=new i.EventEmitter,this.id=u.randomId()}return Object.defineProperty(n.prototype,"configuration",{get:function(){return this.config},set:function(n){this.config=n},enumerable:!0,configurable:!0}),n.prototype.ngOnInit=function(){this.columns||console.error("[columns] property required!"),this.configuration&&(p.config=this.configuration),this.config=p.config,this.api&&this.bindApi(),this.limit=this.config.rows,this.groupRowsBy&&this.doGroupRows(),this.doDecodePersistedState()},n.prototype.ngAfterViewInit=function(){this.cdr.detectChanges()},n.prototype.ngOnChanges=function(n){var e=n.data,t=n.pagination,o=n.groupRowsBy;if(this.toggleRowIndex=n.toggleRowIndex,e&&e.currentValue&&this.doApplyData(e),t&&t.currentValue&&(this.count=t.currentValue.count),o&&o.currentValue&&this.doGroupRows(),this.toggleRowIndex&&this.toggleRowIndex.currentValue){var a=this.toggleRowIndex.currentValue;this.collapseRow(a.index)}},n.prototype.isOrderEnabled=function(n){var e=n.orderEnabled===undefined||!!n.orderEnabled;return p.config.orderEnabled&&e},n.prototype.orderBy=function(n){if("undefined"==typeof n.orderEnabled||n.orderEnabled){var e=n.key;if(p.config.orderEnabled&&""!==e){this.sortByIcon.key=e,"asc"===this.sortByIcon.order?this.sortByIcon.order="desc":this.sortByIcon.order="asc",p.config.orderEventOnly||n.orderEventOnly?(this.sortBy.key="",this.sortBy.order=""):(this.sortBy.key=this.sortByIcon.key,this.sortBy.order=this.sortByIcon.order),p.config.serverPagination||(this.data=c(this.data));var t={key:e,order:this.sortByIcon.order};this.emitEvent(d.onOrder,t)}}},n.prototype.onClick=function(n,e,t,o,a){if(p.config.selectRow&&(this.selectedRow=a),p.config.selectCol&&o&&(this.selectedCol=o),p.config.selectCell&&o&&(this.selectedRow=a,this.selectedCol=o),p.config.clickEvent){var i={event:n,row:e,key:t,rowId:a,colId:o};this.emitEvent(d.onClick,i)}},n.prototype.onDoubleClick=function(n,e,t,o,a){var i={event:n,row:e,key:t,rowId:a,colId:o};this.emitEvent(d.onDoubleClick,i)},n.prototype.onCheckboxSelect=function(n,e,t){var o={event:n,row:e,rowId:t};this.emitEvent(d.onCheckboxSelect,o)},n.prototype.onSelectAll=function(){this.isSelected=!this.isSelected,this.emitEvent(d.onSelectAll,this.isSelected)},n.prototype.onSearch=function(n){p.config.serverPagination||(this.term=n),this.emitEvent(d.onSearch,n)},n.prototype.onGlobalSearch=function(n){p.config.serverPagination||(this.globalSearchTerm=n),this.emitEvent(d.onGlobalSearch,n)},n.prototype.onPagination=function(n){this.page=n.page,this.limit=n.limit,this.emitEvent(d.onPagination,n)},n.prototype.emitEvent=function(n,e){this.event.emit({event:n,value:e}),this.config.persistState&&localStorage.setItem(n,JSON.stringify(e)),this.config.logger&&console.log({event:n,value:e})},n.prototype.collapseRow=function(n){this.selectedDetailsTemplateRowId.has(n)?(this.selectedDetailsTemplateRowId["delete"](n),this.emitEvent(d.onRowCollapsedHide,n)):(this.selectedDetailsTemplateRowId.add(n),this.emitEvent(d.onRowCollapsedShow,n))},n.prototype.doDecodePersistedState=function(){if(this.config.persistState){var n=localStorage.getItem(d.onPagination),e=localStorage.getItem(d.onOrder),t=localStorage.getItem(d.onSearch);if(n&&this.onPagination(JSON.parse(n)),e){var o=JSON.parse(e),a=o.key,i=o.order;this.sortBy.key=a,this.sortBy.order=i,this.data=c(this.data)}t&&(this.term=JSON.parse(t))}},n.prototype.doGroupRows=function(){var e=this;this.grouped=[],t.from(this.data).pipe(o.groupBy(function(n){return n[e.groupRowsBy]}),o.flatMap(function(n){return n.pipe(o.reduce(function(n,e){return c(n,[e])},[]))})).subscribe(function(n){return e.grouped.push(n)})},n.prototype.isRowCollapsed=function(n){return!!this.config.collapseAllRows||this.selectedDetailsTemplateRowId.has(n)},n.prototype.onMouseDown=function(n,e){this.config.resizeColumn&&(this.th=e,this.startOffset=e.offsetWidth-n.pageX,this.emitEvent(d.onColumnResizeMouseDown,n))},n.prototype.onMouseMove=function(n){this.config.resizeColumn&&this.th&&this.th.style&&(this.th.style.width=this.startOffset+n.pageX+"px",this.th.style.cursor="col-resize",this.th.style["user-select"]="none")},n.prototype.onMouseUp=function(n){this.config.resizeColumn&&(this.emitEvent(d.onColumnResizeMouseUp,n),this.th.style.cursor="default",this.th=undefined)},Object.defineProperty(n.prototype,"isLoading",{get:function(){var n=document.getElementById("table");return n&&n.rows&&3<n.rows.length&&this.getLoadingHeight(n.rows),this.config.isLoading},enumerable:!0,configurable:!0}),n.prototype.getLoadingHeight=function(n){var e=this.config.searchEnabled?1:0,t=this.config.headerEnabled?1:0;this.loadingHeight=(n.length-e-t)*(n[3].offsetHeight-1)-2+"px"},n.prototype.getColumnWidth=function(n){return n.width?n.width:this.config.fixedColumnWidth?100/this.columns.length+"%":null},n.prototype.getColumnDefinition=function(n){return n.searchEnabled||"undefined"==typeof n.searchEnabled},Object.defineProperty(n.prototype,"arrowDefinition",{get:function(){return this.config.showDetailsArrow||"undefined"==typeof this.config.showDetailsArrow},enumerable:!0,configurable:!0}),n.prototype.onRowContextMenu=function(n,e,t,o,a){if(this.config.showContextMenu){n.preventDefault();var i={event:n,row:e,key:t,rowId:a,colId:o};this.rowContextMenuPosition={top:n.y-10+"px",left:n.x-10+"px",value:i},this.emitEvent(d.onRowContextMenu,i)}},n.prototype.doApplyData=function(n){var e=this.columns.find(function(n){return!!n.orderBy});e?(this.sortByIcon.order="asc"===e.orderBy?"desc":"asc",this.orderBy(e)):this.data=c(n.currentValue)},n.prototype.onDrop=function(n){this.emitEvent(d.onRowDrop,n),e.moveItemInArray(this.data,n.previousIndex,n.currentIndex)},n.prototype.bindApi=function(){var e=this;this.api.subscribe(function(n){switch(n.type){case f.rowContextMenuClicked:e.rowContextMenuPosition={top:null,left:null,value:null};break;case f.toolPanelClicked:break;default:console.warn("unrecognized API value")}})},n.decorators=[{type:i.Component,args:[{selector:"ngx-table",providers:[p,u],template:'<div class="ngx-container">\n  <div class="ngx-global-search"\n       *ngIf="config.globalSearchEnabled">\n    <global-search (globalUpdate)="onGlobalSearch($event)"></global-search>\n  </div>\n  <table id="table"\n         class="ngx-table"\n         [class.ngx-table__table--tiny]="config.tableLayout.style === \'tiny\'"\n         [class.ngx-table__table--normal]="config.tableLayout.style === \'normal\'"\n         [class.ngx-table__table--big]="config.tableLayout.style === \'big\'"\n         [class.ngx-table__table--borderless]="config.tableLayout.borderless"\n         [class.ngx-table__table--dark]="config.tableLayout.theme === \'dark\'"\n         [class.ngx-table__table--hoverable]="config.tableLayout.hover"\n         [class.ngx-table__table--striped]="config.tableLayout.striped"\n         [class.ngx-table__horizontal-scroll]="config.horizontalScroll && !isLoading">\n    <thead>\n    <tr class="ngx-table__header" *ngIf="config.headerEnabled">\n      <th *ngIf="config.checkboxes" width="3%">\n        <ng-container\n          *ngIf="selectAllTemplate"\n          [ngTemplateOutlet]="selectAllTemplate"\n          [ngTemplateOutletContext]="{ $implicit: onSelectAllBinded }">\n        </ng-container>\n        <label class="ngx-form-checkbox" *ngIf="!selectAllTemplate">\n          <input type="checkbox" (change)="onSelectAll()">\n          <i class="ngx-form-icon" id="selectAllCheckbox"></i>\n        </label>\n      </th>\n      <ng-container *ngFor="let column of columns; let colIndex = index">\n        <th class="ngx-table__header-cell"\n            #th\n            [attr.width]="getColumnWidth(column)"\n            (mousedown)="onMouseDown($event, th)"\n            (mouseup)="onMouseUp($event)"\n            (mousemove)="onMouseMove($event)">\n          <div (click)="orderBy(column)" [class.pointer]="isOrderEnabled(column)">\n            <div class="ngx-table__header-title">{{ column.title }}<span>&nbsp;</span>\n              <i *ngIf="sortByIcon.key === column.key && sortByIcon.order===\'asc\'"\n                 [style.display]="config.orderEnabled?\'\':\'none\' "\n                 class="ngx-icon ngx-icon-arrow-up">\n              </i>\n              <i *ngIf="sortByIcon.key === column.key && sortByIcon.order===\'desc\'"\n                 [style.display]="config.orderEnabled?\'\':\'none\' "\n                 class="ngx-icon ngx-icon-arrow-down">\n              </i>\n            </div>\n          </div>\n          <div class="ngx-table__column-resizer" *ngIf="config.resizeColumn"></div>\n        </th>\n      </ng-container>\n      <th *ngIf="config.additionalActions || config.detailsTemplate || config.collapseAllRows || config.groupRows"\n          class="ngx-table__header-cell-additional-actions">\n        <div class="ngx-dropdown ngx-active"\n             *ngIf="config.additionalActions"\n             [class.ngx-active]="menuActive">\n          <a class="ngx-btn ngx-btn-link" (click)="menuActive = !menuActive">\n            <span class="ngx-icon ngx-icon-menu"></span>\n          </a>\n          <ul class="ngx-menu ngx-table__table-menu">\n            <li class="ngx-menu-item">\n              <app-csv-export [data]="data"\n                              *ngIf="config.exportEnabled">\n              </app-csv-export>\n            </li>\n          </ul>\n        </div>\n      </th>\n    </tr>\n    <tr *ngIf="config.searchEnabled && !filtersTemplate"\n        class="ngx-table__sort-header">\n      <th *ngIf="config.checkboxes"></th>\n      <ng-container *ngFor="let column of columns">\n        <th>\n          <table-header\n            *ngIf="getColumnDefinition(column)"\n            (update)="onSearch($event)"\n            [column]="column">\n          </table-header>\n        </th>\n      </ng-container>\n      <th *ngIf="config.additionalActions || config.detailsTemplate"></th>\n    </tr>\n    <ng-container *ngIf="filtersTemplate">\n      <tr>\n        <ng-container [ngTemplateOutlet]="filtersTemplate">\n        </ng-container>\n      </tr>\n    </ng-container>\n    </thead>\n    <tbody *ngIf="data && !isLoading  && !config.draggable">\n    <ng-container *ngIf="rowTemplate">\n      <ul class="ngx-table__table-row-context-menu"\n          [ngStyle]="{\'position\': \'absolute\', \'top\': rowContextMenuPosition.top, \'left\': rowContextMenuPosition.left }"\n          *ngIf="rowContextMenuPosition.top">\n        <ng-container\n          [ngTemplateOutlet]="rowContextMenu"\n          [ngTemplateOutletContext]="{ $implicit: rowContextMenuPosition.value}">\n        </ng-container>\n      </ul>\n      <ng-container *ngFor="let row of data | sort:sortBy | search:term | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n              let rowIndex = index">\n        <tr\n          (click)="onClick($event, row, \'\', null, rowIndex)"\n          (contextmenu)="onRowContextMenu($event, row, \'\', null, rowIndex)"\n          (dblclick)="onDoubleClick($event, row, \'\', null, rowIndex)"\n          [class.ngx-table__table-row--selected]="rowIndex == selectedRow && !config.selectCell">\n          <ng-container\n            [ngTemplateOutlet]="rowTemplate"\n            [ngTemplateOutletContext]="{ $implicit: row, index: rowIndex }">\n          </ng-container>\n          <td *ngIf="config.detailsTemplate">\n            <span class="ngx-icon"\n                  *ngIf="arrowDefinition"\n                  [ngClass]="isRowCollapsed(rowIndex) ? \'ngx-icon-arrow-down\' : \'ngx-icon-arrow-right\'"\n                  (click)="collapseRow(rowIndex)">\n            </span>\n          </td>\n        </tr>\n        <tr\n          *ngIf="(config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) || config.collapseAllRows">\n          <td [attr.colspan]="columns.length + 1">\n            <ng-container\n              [ngTemplateOutlet]="detailsTemplate"\n              [ngTemplateOutletContext]="{ $implicit: row, index: rowIndex  }">\n            </ng-container>\n          </td>\n        </tr>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf="!rowTemplate && !config.groupRows">\n      <ul class="ngx-table__table-row-context-menu"\n          [ngStyle]="{\'position\': \'absolute\', \'top\': rowContextMenuPosition.top, \'left\': rowContextMenuPosition.left }"\n          *ngIf="rowContextMenuPosition.top">\n        <ng-container\n          [ngTemplateOutlet]="rowContextMenu"\n          [ngTemplateOutletContext]="{ $implicit: rowContextMenuPosition.value}">\n        </ng-container>\n      </ul>\n      <ng-container\n        *ngFor="let row of data | sort:sortBy | search:term | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                  let rowIndex = index">\n        <tr [class.ngx-table__table-row--selected]="rowIndex == selectedRow && !config.selectCell">\n          <td *ngIf="config.checkboxes">\n            <label class="ngx-form-checkbox">\n              <input type="checkbox"\n                     id="checkbox-{{rowIndex}}"\n                     [checked]="isSelected"\n                     (change)="onCheckboxSelect($event, row, rowIndex)">\n              <i class="ngx-form-icon"></i>\n            </label>\n          </td>\n          <ng-container *ngFor="let column of columns; let colIndex = index">\n            <td (click)="onClick($event, row, column.key, colIndex, rowIndex)"\n                (contextmenu)="onRowContextMenu($event, row, column.key, colIndex, rowIndex)"\n                (dblclick)="onDoubleClick($event, row, column.key, colIndex, rowIndex)"\n                [class.ngx-table__table-col--selected]="colIndex == selectedCol && !config.selectCell"\n                [class.ngx-table__table-cell--selected]="colIndex == selectedCol && rowIndex == selectedRow && !config.selectCol && !config.selectRow"\n            >\n              <div *ngIf="!column.cellTemplate">{{ row | render:column.key }}</div>\n              <ng-container\n                *ngIf="column.cellTemplate"\n                [ngTemplateOutlet]="column.cellTemplate"\n                [ngTemplateOutletContext]="{ $implicit: row, rowIndex: rowIndex }">\n              </ng-container>\n            </td>\n          </ng-container>\n          <td *ngIf="config.additionalActions || config.detailsTemplate">\n            <span class="ngx-icon"\n                  *ngIf="arrowDefinition"\n                  [ngClass]="isRowCollapsed(rowIndex) ? \'ngx-icon-arrow-down\' : \'ngx-icon-arrow-right\'"\n                  (click)="collapseRow(rowIndex)">\n            </span>\n          </td>\n        </tr>\n        <tr\n          *ngIf="(config.detailsTemplate && selectedDetailsTemplateRowId.has(rowIndex)) || config.collapseAllRows">\n          <td *ngIf="config.checkboxes"></td>\n          <td [attr.colspan]="columns.length + 1">\n            <ng-container\n              [ngTemplateOutlet]="detailsTemplate"\n              [ngTemplateOutletContext]="{ $implicit: row, index: rowIndex }">\n            </ng-container>\n          </td>\n        </tr>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf="!rowTemplate && config.groupRows">\n      <ng-container\n        *ngFor="let group of grouped | sort:sortBy | search:term | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id }; let rowIndex = index">\n        <tr>\n          <ng-container *ngIf="!groupRowsHeaderTemplate">\n            <td [attr.colspan]="columns.length">\n              <div>{{group[0][groupRowsBy]}} ({{group.length}})</div>\n            </td>\n          </ng-container>\n          <ng-container\n            *ngIf="groupRowsHeaderTemplate"\n            [ngTemplateOutlet]="groupRowsHeaderTemplate"\n            [ngTemplateOutletContext]="{\n              total: group.length,\n              key: groupRowsBy,\n              value: group[0][groupRowsBy],\n              group: group,\n              index: rowIndex\n            }">\n          </ng-container>\n          <td>\n            <span class="ngx-icon"\n                  *ngIf="arrowDefinition"\n                  [ngClass]="isRowCollapsed(rowIndex) ? \'ngx-icon-arrow-down\' : \'ngx-icon-arrow-right\'"\n                  (click)="collapseRow(rowIndex)">\n            </span>\n          </td>\n        </tr>\n        <ng-container *ngIf="selectedDetailsTemplateRowId.has(rowIndex)">\n          <tr *ngFor="let row of group">\n            <td *ngFor="let column of columns">\n              {{ row | render:column.key }}\n              \x3c!-- TODO allow users to add groupRowsTemplateRef --\x3e\n            </td>\n            <td></td>\n          </tr>\n        </ng-container>\n      </ng-container>\n    </ng-container>\n    </tbody>\n    <tbody *ngIf="data && !config.isLoading && config.draggable" cdkDropList (cdkDropListDropped)="onDrop($event)">\n    <ng-container *ngIf="!rowTemplate && !config.groupRows">\n      <ng-container\n        *ngFor="let row of data | sort:sortBy | search:term | global:globalSearchTerm | paginate: { itemsPerPage: limit, currentPage: page, totalItems: count, id: id };\n                  let rowIndex = index">\n        <tr class="ngx-draggable-row" cdkDrag>\n          <td *ngIf="config.checkboxes">\n            <label class="ngx-form-checkbox">\n              <input type="checkbox"\n                     id="checkbox-draggable-{{rowIndex}}"\n                     [checked]="isSelected"\n                     (change)="onCheckboxSelect($event, row, rowIndex)">\n              <i class="ngx-form-icon"></i>\n            </label>\n          </td>\n          <ng-container *ngFor="let column of columns; let colIndex = index">\n            <td (click)="onClick($event, row, column.key, colIndex, rowIndex)"\n                (dblclick)="onDoubleClick($event, row, column.key, colIndex, rowIndex)"\n                [class.ngx-table__table-col--selected]="colIndex == selectedCol && !config.selectCell"\n                [class.ngx-table__table-cell--selected]="colIndex == selectedCol && rowIndex == selectedRow && !config.selectCol && !config.selectRow"\n            >\n              <div>{{ row | render:column.key }}</div>\n            </td>\n          </ng-container>\n        </tr>\n      </ng-container>\n    </ng-container>\n    </tbody>\n    <tbody *ngIf="!isLoading && (!data || (data && data.length < 1))">\n    <tr class="ngx-table__body-empty">\n      <ng-container\n        *ngIf="noResultsTemplate"\n        [ngTemplateOutlet]="noResultsTemplate">\n      </ng-container>\n      <td [attr.colspan]="columns && columns.length + 1" *ngIf="!noResultsTemplate">\n        <div class="ngx-table__table-no-results">\n          No results\n        </div>\n      </td>\n    </tr>\n    </tbody>\n    <tbody *ngIf="isLoading">\n    <tr class="ngx-table__body-loading">\n      <td [attr.colspan]="columns && columns.length + 1">\n        <div [style.height]="loadingHeight"\n             class="ngx-table__table-loader-wrapper">\n          <div class="ngx-table__table-loader"></div>\n        </div>\n      </td>\n    </tr>\n    </tbody>\n    <tfoot *ngIf="summaryTemplate">\n    <tr>\n      <ng-container\n        [ngTemplateOutlet]="summaryTemplate"\n        [ngTemplateOutletContext]="{ total: data.length, limit: limit, page: page  }">\n      </ng-container>\n    </tr>\n    </tfoot>\n  </table>\n  <pagination\n    id="pagination"\n    *ngIf="config.paginationEnabled"\n    [id]="id"\n    [config]="config"\n    [pagination]="pagination"\n    (updateRange)="onPagination($event)">\n  </pagination>\n</div>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],n.ctorParameters=function(){return[{type:i.ChangeDetectorRef}]},n.propDecorators={configuration:[{type:i.Input,args:["configuration"]}],api:[{type:i.Input}],data:[{type:i.Input}],pagination:[{type:i.Input}],groupRowsBy:[{type:i.Input}],toggleRowIndex:[{type:i.Input}],detailsTemplate:[{type:i.Input}],summaryTemplate:[{type:i.Input}],groupRowsHeaderTemplate:[{type:i.Input}],filtersTemplate:[{type:i.Input}],selectAllTemplate:[{type:i.Input}],noResultsTemplate:[{type:i.Input}],rowContextMenu:[{type:i.Input}],columns:[{type:i.Input}],event:[{type:i.Output}],rowTemplate:[{type:i.ContentChild,args:[i.TemplateRef]}]},n}(),m=function(){function n(){}return n.prototype.exportCsv=function(){var t=this.data,o="data:text/csv;charset=utf-8,",a="",i=[],n=Object.keys(this.data[0]);t.forEach(function(e,t){i[t]=[],n.forEach(function(n){e.hasOwnProperty(n)&&("object"==typeof e[n]&&(e[n]="Object"),i[t].push(e[n]))})}),o+=n+"\n",i.forEach(function(n,e){a=n.join(","),o+=e<t.length?a+"\n":a});var e=encodeURI(o),r=document.createElement("a");r.setAttribute("href",e),r.setAttribute("download","my_data.csv"),r.click()},n.decorators=[{type:i.Component,args:[{selector:"app-csv-export",template:'\n    <a (click)="exportCsv()" class="ngx-menu-item">\n      CSV export\n    </a>'}]}],n.propDecorators={data:[{type:i.Input}]},n}(),x=function(){function n(){this.globalUpdate=new i.EventEmitter}return n.decorators=[{type:i.Component,args:[{selector:"global-search",template:'<label for="search">\n  <input type="text"\n         id="search"\n         class="ngx-table__header-search"\n         #input\n         (input)="globalUpdate.emit({value: input.value})"\n         placeholder="Search"/>\n</label>\n'}]}],n.propDecorators={globalUpdate:[{type:i.Output}]},n}(),y=function(){function n(){this.update=new i.EventEmitter}return n.prototype.unifyKey=function(n){return n.replace(".","_")},n.decorators=[{type:i.Component,args:[{selector:"table-header",template:'<label for="search_{{ unifyKey(column.key) }}">\n  <input type="text"\n         id="search_{{ unifyKey(column.key) }}"\n         aria-label="Search"\n         placeholder="{{ column.placeholder ? column.placeholder : column.title }}"\n         class="ngx-table__header-search"\n         #input\n         (input)="update.emit({value: input.value, key: column.key})"\n  >\n</label>\n'}]}],n.propDecorators={column:[{type:i.Input}],update:[{type:i.Output}]},n}(),w=function(){function n(){this.updateRange=new i.EventEmitter,this.ranges=[5,10,25,50,100],this.limit=p.config.rows,this.showRange=!1}return n.prototype.onPageChange=function(n){this.updateRange.emit({page:n,limit:this.limit})},n.prototype.changeLimit=function(n){this.showRange=!this.showRange,this.limit=n,this.updateRange.emit({page:1,limit:n})},n.decorators=[{type:i.Component,args:[{selector:"pagination",template:'<div class="ngx-pagination-wrapper"\n     [class.ngx-table__table--dark-pagination-wrapper]="config.tableLayout.theme === \'dark\'">\n  <div class="ngx-pagination-steps">\n    <pagination-controls\n      [class.ngx-pagination-style]="config.tableLayout.theme !== \'dark\'"\n      [class.ngx-table__table--dark-pagination]="config.tableLayout.theme === \'dark\'"\n      id="pagination-controls"\n      [id]="id"\n      [maxSize]="config.paginationMaxSize || 5"\n      [previousLabel]="\'\'"\n      [nextLabel]="\'\'"\n      (pageChange)="onPageChange($event)">\n    </pagination-controls>\n  </div>\n  <div class="ngx-pagination-range"\n       [class.ngx-table__table--dark-pagination-range]="config.tableLayout.theme === \'dark\'"\n       *ngIf="config.paginationRangeEnabled">\n    <div class="ngx-dropdown ngx-pagination-range-dropdown"\n         [class.ngx-active]="showRange"\n         id="rowAmount">\n      <div class="ngx-btn-group">\n        <div class="ngx-pagination-range-dropdown-button"\n             (click)="showRange = !showRange">\n          {{limit}} <i class="ngx-icon ngx-icon-arrow-down"></i>\n        </div>\n        <ul class="ngx-menu">\n          <li class="ngx-pagination-range-dropdown-button-item"\n              (click)="changeLimit(limit)"\n              *ngFor="let limit of ranges">\n            <span>{{limit}}</span>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n</div>\n',changeDetection:i.ChangeDetectionStrategy.OnPush}]}],n.propDecorators={pagination:[{type:i.Input}],config:[{type:i.Input}],id:[{type:i.Input}],updateRange:[{type:i.Output}]},n}(),b=function(){function n(){}return n.prototype.transform=function(n,e){if(void 0!==n)return void 0===e||0===Object.keys(e).length||""===e?n:n.filter(function(n){return-1!==JSON.stringify(Object.values(n)).toLocaleLowerCase().indexOf(e.value.toLocaleLowerCase())})},n.decorators=[{type:i.Pipe,args:[{name:"global"}]}],n}(),I=function(){function n(){}return n.getPath=function(n,e){return n.reduce(function(n,e){return n&&"undefined"!=typeof n[e]?n[e]:null},e)},n.decorators=[{type:i.Injectable}],n}(),v=function(){function n(){}return n.prototype.transform=function(n,e){var t=e.split(".");return I.getPath(t,n)},n.decorators=[{type:i.Pipe,args:[{name:"render"}]}],n}(),C=function(){function n(){this.filters={}}return n.prototype.transform=function(n,e){var a=this;if(void 0!==n)return void 0===e?n:(this.filters[e.key]=e.value.toString().toLocaleLowerCase(),0!==Object.keys(e).length&&""!==e.value||delete this.filters[e.key],n.filter(function(o){return Object.keys(a.filters).every(function(n){var e=n.split("."),t=I.getPath(e,o);return-1<("object"==typeof t?JSON.stringify(t):t.toString().toLocaleLowerCase()).indexOf(a.filters[n])})}))},n.decorators=[{type:i.Pipe,args:[{name:"search"}]}],n}(),k=function(){function c(){}return c.isNaN=function(n,e){return isNaN(parseFloat(n))||!isFinite(n)||isNaN(parseFloat(e))||!isFinite(e)},c.compare=function(n,e,t){var o=t.split("."),a=I.getPath(o,n),i=I.getPath(o,e),r=(a+"").toLowerCase(),l=(i+"").toLowerCase();return c.isNaN(a,i)?r.localeCompare(l):parseFloat(a)<parseFloat(i)?-1:parseFloat(a)>parseFloat(i)?1:0},c.prototype.transform=function(n,t){return t.key&&""!==t.key?"asc"===t.order?n.sort(function(n,e){return c.compare(n,e,t.key)}):n.sort(function(n,e){return c.compare(e,n,t.key)}):n},c.decorators=[{type:i.Pipe,args:[{name:"sort"}]}],c}(),R=function(){function n(){}return n.decorators=[{type:i.NgModule,args:[{declarations:[h,x,m,y,w,C,v,b,k],imports:[a.CommonModule,r.NgxPaginationModule,e.DragDropModule],exports:[h]}]}],n}(),T=function(){function n(){}return n.decorators=[{type:i.NgModule,args:[{imports:[a.CommonModule,R],bootstrap:[h],exports:[h],providers:[]}]}],n}();n.TableModule=T,n.STYLE=s,n.THEME=g,n.Event=d,n.ɵb=h,n.ɵa=R,n.ɵf=m,n.ɵe=x,n.ɵg=y,n.ɵh=w,n.ɵk=b,n.ɵj=v,n.ɵi=C,n.ɵl=k,n.ɵc=p,n.ɵd=u,Object.defineProperty(n,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-easy-table.umd.min.js.map